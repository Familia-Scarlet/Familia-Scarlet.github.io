import{_ as r,r as i,o as n,c as t,b as e,d as a,e as o,a as l}from"./app-09c9e424.js";const d="/assets/3791e575c48b3698be6a94ae1dbff79d-56ea5949.png",c={},h=e("h2",{id:"border属性",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#border属性","aria-hidden":"true"},"#"),a(" border属性")],-1),p=e("p",null,"属性值的顺序是大小、样式、颜色",-1),_=e("p",null,"样式有solid、dashed",-1),f={id:"flex布局",tabindex:"-1"},x=e("a",{class:"header-anchor",href:"#flex布局","aria-hidden":"true"},"#",-1),m={href:"https://www.runoob.com/w3cnote/flex-grammar.html",target:"_blank",rel:"noopener noreferrer"},b=l('<h3 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念" aria-hidden="true">#</a> 基本概念</h3><p>参考菜鸟教程的</p><p>采用Flex布局的元素，称为Flex容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称”项目”。</p><p><img src="'+d+'" alt="img"></p><p>容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。</p><p>项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。</p><p>当一个div的display属性被设置为flex后，那么这个div内部的元素的display属性将变成inline-block</p><h3 id="容器属性" tabindex="-1"><a class="header-anchor" href="#容器属性" aria-hidden="true">#</a> 容器属性</h3><p>justify-content，控制在主轴线上的位置</p><p>align-items，控制在交叉轴线上的位置</p><p>flex-wrap，控制换行</p><h3 id="容器内项目属性" tabindex="-1"><a class="header-anchor" href="#容器内项目属性" aria-hidden="true">#</a> 容器内项目属性</h3><ul><li>order</li><li>flex-grow</li><li>flex-shrink</li><li>flex-basis</li><li>flex</li><li>align-self</li></ul>',13);function u(g,k){const s=i("ExternalLinkIcon");return n(),t("div",null,[h,p,_,e("h2",f,[x,a(),e("a",m,[a("flex布局"),o(s)])]),b])}const v=r(c,[["render",u],["__file","css笔记.html.vue"]]);export{v as default};
